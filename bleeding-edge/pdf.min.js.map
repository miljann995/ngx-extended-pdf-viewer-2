{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/shared/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/webpack/startup"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","_display_utils","__w_pdfjs_require__","_api","_util","_annotation_layer","_worker_options","_text_layer","_svg","PDFNetworkStream","require","PDFFetchStream","isFetchSupported","setPDFNetworkStreamFactory","params","isValidFetchUrl","url","addLinkAttributes","link","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","getFilenameFromUrl","anchor","query","end","Math","length","loadScript","src","Promise","resolve","reject","script","document","Error","head","documentElement","appendChild","deprecated","details","console","SVG_NS","BaseCanvasFactory","constructor","unreachable","create","reset","canvasAndContext","canvas","width","height","destroy","DOMCanvasFactory","ownerDocument","globalThis","super","_document","createElement","context","BaseCMapReaderFactory","baseUrl","isCompressed","[object Object]","name","compressionType","CMapCompressionType","BINARY","_fetchData","catch","reason","DOMCMapReaderFactory","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","DONE","responseText","DOMSVGFactory","svg","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","StatTimer","started","Object","times","time","warn","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","Response","prototype","ReadableStream","protocol","URL","ex","pdfDateStringRegex","PDFDateString","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","i","arrayByteLength","pos","data","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createPromiseCapability","capability","isSettled","get","escapeString","str","replace","match","encodeToXmlString","buffer","ii","char","entity","XMLEntities","toUpperCase","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","every","element","index","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","setVerbosityLevel","level","Number","string32","value","stringToPDFString","code","PDFStringTranslateTable","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","shadow","obj","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","rgbBuf","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","createObjectURL","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","b1","b2","b3","60","62","38","34","39","_font_loader","_node_utils","_annotation_storage","_api_compatibility","_canvas","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","window","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","createPDFNetworkStream","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","rangeTransport","worker","key","pdfBytes","isNaN","location","href","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","ignoreErrors","fontExtraProperties","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","saveDocument","getFieldObjects","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","annotationsPromise","annotationsIntent","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","optionalContentConfigPromise","renderingIntent","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","getAll","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","defer","_listeners","_defer","_deferred","postMessage","forEach","cloned","WeakMap","cloneValue","transfers","byteOffset","Array","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","bind","_params","cMapUrl","CMapReaderFactory","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","terminated","cancelAllRequests","sink","getFullReader","evt","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","filename","resetModified","results","OptionalContentConfig","metadata","Metadata","contentDispositionFilename","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","add","insertRule","getElementsByTagName","styleSheet","sheet","remove","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","supported","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","__non_webpack_require__","Canvas","fs","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getOrCreateValue","defaultValue","setValue","_setModified","compatibilityParams","checkFontFace","_pattern_helper","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","backdrop","isEnabled","genericComposeSMask","subtype","hasBackdrop","composeFn","chunkSize","row","chunkHeight","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","steps","fnId","OPS","depObjId","objsPool","CanvasGraphics_endDrawing","drawImage","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","style","lineCap","CanvasGraphics_setLineJoin","lineJoin","CanvasGraphics_setMiterLimit","limit","miterLimit","CanvasGraphics_setDash","dashArray","dashPhase","CanvasGraphics_setGState","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","resumeSMaskGroup","CanvasGraphics_resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","CanvasGraphics_closeStroke","CanvasGraphics_fill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","beginPath","path","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","mode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","CanvasGraphics_showType3Text","spacingLength","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","arguments","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","strokeStyle","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","isPatternFill","COMPILE_TYPE3_GLYPHS","compileType3Glyph","width1","j0","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","maskCanvas","skewX","skewY","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","w","h","CanvasGraphics_paintInlineImageXObject","widthScale","imgToPaint","tmpCanvas","tmpCtx","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","visible","CanvasGraphics_beginMarkedContentProps","isVisible","isContentVisible","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","CanvasGraphics_isContentVisible","op","raw","shadingIR","ShadingIRs","applyBoundingBox","Path2D","region","fromIR","RadialAxial_fromIR","colorStops","r1","getPattern","RadialAxial_getPattern","grad","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","Dummy_fromIR","Dummy_fromIR_getPattern","TilingPatternClosure","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","_xml_parser","_repair","xmlDocument","SimpleXMLParser","parser","_metadataMap","_parse","codes","d1","d2","d3","chars","substring","rdf","firstChild","nextSibling","nodeName","hasChildNodes","children","childNodes","jj","toLowerCase","trim","XMLParserErrorCode","isWhitespace","ch","SimpleDOMNode","nodeValue","parentNode","child","join","searchNode","component","stack","node","parent","siblingPos","currentPos","newPos","dump","attributes","attribute","XMLParserBase","_resolveEntities","onResolveEntity","_parseContent","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","hasAttributes","_currentFragment","_stack","_errorCode","_hasAttributes","parseFromString","isWhitespaceString","isEmpty","lastElement","OptionalContentGroup","creator","_order","_groups","order","groups","off","expression","policy","ids","setVisibility","getOrder","keys","getGroups","getGroup","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","COMPILE_STATUS","errorMsg","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","LINK_STATUS","createTexture","textureId","texture","CLAMP_TO_EDGE","NEAREST","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskCache","figuresCache","initSmaskGL","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","Float32Array","STATIC_DRAW","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","colorLocation","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","container","_createContainer","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","isTooltipOnly","className","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","getDestinationHash","destination","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","JSON","alternativeText","hasAppearance","fieldValue","TEXT_ALIGNMENT","storage","multiLine","readOnly","fieldName","maxLen","comb","combWidth","_setTextStyle","textAlignment","fontFamily","checked","buttonValue","radio","selectElement","combo","options","multiSelect","option","optionElement","displayValue","exportValue","includes","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentTop","parseFloat","popupLeft","transformOrigin","pinned","hideElement","setAttribute","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","hasAttribute","removeAttribute","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","eventBus","dispatch","_download","downloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","renderTextLayer","renderTextLayerClosure","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","tx","fontName","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","textDivs","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_bounds","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","FontInspector","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","TextLayer_cancel","_processItems","len","styleCache","_layoutText","measureText","_render","TextLayer_render","timeout","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opList","fn","opListToTree","opTree","opListElement","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","NetworkManager","isHttp","test","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","n","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","from","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","_readCapability","__webpack_module_cache__","moduleId","__webpack_modules__"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n/**\n * Gets the file name from a given URL.\n * @param {string} url\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @returns {Promise<void>}\n */\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  BaseCanvasFactory,\n  DOMCanvasFactory,\n  BaseCMapReaderFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"MouseEnter\",\n  X: \"MouseExit\",\n  D: \"MouseDown\",\n  U: \"MouseUp\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([\\(\\)\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  escapeString,\n  encodeToXmlString,\n  getModificationDate,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object<string, boolean>} streamTypes - Used stream types in the\n *   document (an item is set to true if specific stream ID was used in the\n *   document).\n * @property {Object<string, boolean>} fontTypes - Used font types in the\n *   document (an item is set to true if specific font ID was used in the\n *   document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src -\n *   Can be a URL to where a PDF file is located, a typed array (Uint8Array)\n *   already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   */\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage:\n          (annotationStorage && annotationStorage.getAll()) || null,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage:\n          (annotationStorage && annotationStorage.getAll()) || null,\n        filename: this._fullReader ? this._fullReader.filename : null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported =\n      typeof this._document !== \"undefined\" && !!this._document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists\n   * or store and return the default value\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getOrCreateValue(key, defaultValue) {\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    if (this._storage.get(key) !== value) {\n      this._setModified();\n    }\n    this._storage.set(key, value);\n  }\n\n  getAll() {\n    if (this._storage.size === 0) {\n      return null;\n    }\n    return Object.fromEntries(this._storage);\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nconst MIN_WIDTH_FACTOR = 0.65;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        const m = this._transformMatrix;\n        const a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        const ad_bc = a * d - b * c;\n        const bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      const old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      const prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      const m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      const m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      const cosValue = Math.cos(angle);\n      const sinValue = Math.sin(angle);\n\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nconst CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      let canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (const id in this.cache) {\n        const canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  const POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nconst CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    const backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            let width = args[j++];\n            let height = args[j++];\n            if (width === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n              height = this.getSinglePixelWidth();\n            }\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (\n          strokeColor &&\n          strokeColor.hasOwnProperty(\"type\") &&\n          strokeColor.type === \"Pattern\"\n        ) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          ctx.lineWidth = Math.max(\n            this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n            this.current.lineWidth * scale\n          );\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(\n            this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n            this.current.lineWidth\n          );\n          ctx.stroke();\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          const measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            const characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      const color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      const color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      const a = currentTransform[0],\n        b = currentTransform[1];\n      let widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      const c = currentTransform[2],\n        d = currentTransform[3];\n      let heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nconst ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    const type = raw[1];\n    const bbox = raw[2];\n    const colorStops = raw[3];\n    const p0 = raw[4];\n    const p1 = raw[5];\n    const r0 = raw[6];\n    const r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        let grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n          const c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nconst createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    const coords = context.coords,\n      colors = context.colors;\n    const bytes = data.data,\n      rowSize = data.width * 4;\n    let tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    const c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    const c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    const c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    const minY = Math.round(y1),\n      maxY = Math.round(y3);\n    let xa, car, cag, cab;\n    let xb, cbr, cbg, cbb;\n    for (let y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      const x1_ = Math.round(Math.min(xa, xb));\n      const x2_ = Math.round(Math.max(xa, xb));\n      let j = rowSize * y + x1_ * 4;\n      for (let x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    const ps = figure.coords;\n    const cs = figure.colors;\n    let i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        const verticesPerRow = figure.verticesPerRow;\n        const rows = Math.floor(ps.length / verticesPerRow) - 1;\n        const cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          let q = i * verticesPerRow;\n          for (let j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    let canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      const tmpCtx = tmpCanvas.context;\n\n      const data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        const bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    const coords = raw[2];\n    const colors = raw[3];\n    const figures = raw[4];\n    const bounds = raw[5];\n    const matrix = raw[6];\n    const bbox = raw[7];\n    const background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        let scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            const matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        const temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  const shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nconst TilingPattern = (function TilingPatternClosure() {\n  const PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      const operatorList = this.operatorList;\n      const bbox = this.bbox;\n      const xstep = this.xstep;\n      const ystep = this.ystep;\n      const paintType = this.paintType;\n      const tilingType = this.tilingType;\n      const color = this.color;\n      const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      const x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      const curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      const combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      const dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      const dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      const tmpCtx = tmpCanvas.context;\n      const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      let size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        const bboxWidth = x1 - x0;\n        const bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          const ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          const cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"../shared/xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    return Object.fromEntries(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nimport { encodeToXmlString } from \"./util.js\";\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCodePoint(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCodePoint(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n\n  /**\n   * Search a node in the tree with the given path\n   * foo.bar[nnn], i.e. find the nnn-th node named\n   * bar under a node named foo.\n   *\n   * @param {Array} paths - an array of objects as\n   * returned by {parseXFAPath}.\n   * @param {number} pos - the current position in\n   * the paths array.\n   * @returns {SimpleDOMNode} The node corresponding\n   * to the path or null if not found.\n   */\n  searchNode(paths, pos) {\n    if (pos >= paths.length) {\n      return this;\n    }\n\n    const component = paths[pos];\n    const stack = [];\n    let node = this;\n\n    while (true) {\n      if (component.name === node.nodeName) {\n        if (component.pos === 0) {\n          const res = node.searchNode(paths, pos + 1);\n          if (res !== null) {\n            return res;\n          }\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          const [parent] = stack.pop();\n          let siblingPos = 0;\n          for (const child of parent.childNodes) {\n            if (component.name === child.nodeName) {\n              if (siblingPos === component.pos) {\n                return child.searchNode(paths, pos + 1);\n              }\n              siblingPos++;\n            }\n          }\n          // We didn't find the correct sibling\n          // so just return the first found node\n          return node.searchNode(paths, pos + 1);\n        }\n      }\n\n      if (node.childNodes && node.childNodes.length !== 0) {\n        stack.push([node, 0]);\n        node = node.childNodes[0];\n      } else if (stack.length === 0) {\n        return null;\n      } else {\n        while (stack.length !== 0) {\n          const [parent, currentPos] = stack.pop();\n          const newPos = currentPos + 1;\n          if (newPos < parent.childNodes.length) {\n            stack.push([parent, newPos]);\n            node = parent.childNodes[newPos];\n            break;\n          }\n        }\n        if (stack.length === 0) {\n          return null;\n        }\n      }\n    }\n  }\n\n  dump(buffer) {\n    if (this.nodeName === \"#text\") {\n      buffer.push(encodeToXmlString(this.nodeValue));\n      return;\n    }\n\n    buffer.push(`<${this.nodeName}`);\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        buffer.push(\n          ` ${attribute.name}=\\\"${encodeToXmlString(attribute.value)}\\\"`\n        );\n      }\n    }\n    if (this.hasChildNodes()) {\n      buffer.push(\">\");\n      for (const child of this.childNodes) {\n        child.dump(buffer);\n      }\n      buffer.push(`</${this.nodeName}>`);\n    } else if (this.nodeValue) {\n      buffer.push(`>${encodeToXmlString(this.nodeValue)}</${this.nodeName}>`);\n    } else {\n      buffer.push(\"/>\");\n    }\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor(hasAttributes = false) {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n    this._hasAttributes = hasAttributes;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    if (this._hasAttributes) {\n      node.attributes = attributes;\n    }\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleDOMNode, SimpleXMLParser };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    if (!this._groups.size) {\n      return null;\n    }\n    return Object.fromEntries(this._groups);\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nconst WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      const errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    const program = gl.createProgram();\n    for (let i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      const errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  let currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  const smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  const smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  let smaskCache = null;\n\n  function initSmaskGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    const texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    const width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    const cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    const texture = createTexture(gl, layer, gl.TEXTURE0);\n    const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  const figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  const figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  let figuresCache = null;\n\n  function initFiguresGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    const cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    let count = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          const rows =\n            (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    const coords = new Float32Array(count * 2);\n    const colors = new Uint8Array(count * 3);\n    const coordsMap = context.coords,\n      colorsMap = context.colors;\n    let pIndex = 0,\n      cIndex = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      const figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          const cols = figure.verticesPerRow;\n          const rows = (ps.length / cols) | 0;\n          for (let row = 1; row < rows; row++) {\n            let offset = row * cols + 1;\n            for (let col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (let j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    const colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const textContent = storage.getOrCreateValue(id, this.data.fieldValue);\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      element.addEventListener(\"input\", function (event) {\n        storage.setValue(id, event.target.value);\n      });\n\n      element.addEventListener(\"blur\", function (event) {\n        event.target.setSelectionRange(0, 0);\n      });\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(\n      id,\n      data.fieldValue && data.fieldValue !== \"Off\"\n    );\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.addEventListener(\"change\", function (event) {\n      storage.setValue(id, event.target.checked);\n    });\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(\n      id,\n      data.fieldValue === data.buttonValue\n    );\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const radio of document.getElementsByName(name)) {\n        if (radio !== event.target) {\n          storage.setValue(\n            radio.parentNode.getAttribute(\"data-annotation-id\"),\n            false\n          );\n        }\n      }\n      storage.setValue(id, event.target.checked);\n    });\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getOrCreateValue` is\n    // used and the full array of field values is stored.\n    storage.getOrCreateValue(\n      id,\n      this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null\n    );\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    selectElement.addEventListener(\"input\", function (event) {\n      const options = event.target.options;\n      const value = options[options.selectedIndex].value;\n      storage.setValue(id, value);\n    });\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentTop = parseFloat(parentElement.style.top),\n      parentLeft = parseFloat(parentElement.style.left),\n      parentWidth = parseFloat(parentElement.style.width);\n    const popupLeft = parentLeft + parentWidth;\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-parentTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms:\n          typeof parameters.renderInteractiveForms === \"boolean\"\n            ? parameters.renderInteractiveForms\n            : true,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nconst renderTextLayer = (function renderTextLayerClosure() {\n  const MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  const NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    const textDiv = document.createElement(\"span\");\n    const textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    const tx = Util.transform(task._viewport.transform, geom.transform);\n    let angle = Math.atan2(tx[1], tx[0]);\n    const style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    const fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    let fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      let angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      const divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      const divHeight = fontHeight;\n\n      let m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    const textDivs = task._textDivs;\n    const capability = task._capability;\n    const textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (let i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    const bounds = task._bounds;\n    const viewport = task._viewport;\n\n    const expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (let i = 0; i < expanded.length; i++) {\n      const div = bounds[i].div;\n      const divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      const e = expanded[i],\n        b = bounds[i];\n      const m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      const ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        const t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    const bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    const expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      const e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    const fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    const horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      let i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      let j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      let horizonPart, affectedBoundary;\n      let q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        let xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      const changedHorizon = [];\n      let lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        const useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        let used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      const affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    const task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason && reason.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __w_pdfjs_require__(0);\n"]}